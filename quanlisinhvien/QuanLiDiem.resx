<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button6.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>