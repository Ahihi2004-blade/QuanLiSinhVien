<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnRefresh.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        xLtx48Yp/AezjogZpLHyRgAAAABJRU5ErkJggg==
</value>
  </data>
</root>